/* Generated By:JJTree&JavaCC: Do not edit this line. UQLTreeParserConstants.java */
package com.dw.system.codedom.parser;

public interface UQLTreeParserConstants {

  int EOF = 0;
  int AND = 7;
  int OR = 8;
  int USER = 9;
  int ROLE = 10;
  int ORG_UNIT = 11;
  int LPAREN = 12;
  int RPAREN = 13;
  int TRUE = 14;
  int FALSE = 15;
  int VAR = 16;
  int IF = 17;
  int ELSE = 18;
  int DOT = 19;
  int NULL = 20;
  int ASSIGN = 21;
  int GT = 22;
  int LT = 23;
  int BANG = 24;
  int TILDE = 25;
  int HOOK = 26;
  int COLON = 27;
  int EQ = 28;
  int LE = 29;
  int GE = 30;
  int NE = 31;
  int SC_OR = 32;
  int SC_AND = 33;
  int INCR = 34;
  int DECR = 35;
  int PLUS = 36;
  int MINUS = 37;
  int STAR = 38;
  int SLASH = 39;
  int BIT_AND = 40;
  int BIT_OR = 41;
  int XOR = 42;
  int REM = 43;
  int LSHIFT = 44;
  int RSIGNEDSHIFT = 45;
  int RUNSIGNEDSHIFT = 46;
  int PLUSASSIGN = 47;
  int MINUSASSIGN = 48;
  int STARASSIGN = 49;
  int SLASHASSIGN = 50;
  int ANDASSIGN = 51;
  int ORASSIGN = 52;
  int XORASSIGN = 53;
  int REMASSIGN = 54;
  int LSHIFTASSIGN = 55;
  int RSIGNEDSHIFTASSIGN = 56;
  int RUNSIGNEDSHIFTASSIGN = 57;
  int INTEGER_LITERAL = 58;
  int DECIMAL_LITERAL = 59;
  int HEX_LITERAL = 60;
  int OCTAL_LITERAL = 61;
  int BIN_LITERAL = 62;
  int FLOATING_POINT_LITERAL = 63;
  int EXPONENT = 64;
  int CHARACTER_LITERAL = 65;
  int STRING_LITERAL = 66;
  int IDENTIFIER = 67;
  int LETTER = 68;
  int DIGIT = 69;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"and\"",
    "\"or\"",
    "\"user\"",
    "\"role\"",
    "\"orgunit\"",
    "\"(\"",
    "\")\"",
    "\"true\"",
    "\"false\"",
    "\"var\"",
    "\"if\"",
    "\"else\"",
    "\".\"",
    "\"null\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<BIN_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"@\"",
  };

}
