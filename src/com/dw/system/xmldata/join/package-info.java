/**
 * 它描述了不同的能够提供或接收XmlData的模块之间的连接
 * 
 * 在使用XmlData过程中,如果已经定义好了XmlDataStruct,接下来的问题就是
 * 如何传递数据.
 * 
 * 比如已经存在两个模块,它么都会接收特定格式的XmlData数据,并能够提供特定格式的
 * xml数据. 则会产生一个大问题. 如果两个模块之间要进行数据交换,但他们的数据格式不一样
 * 如何快速的让他们之间进行通信.
 *    一种方法是通过建立公共适应的数据结构,来使得模块之间可以自动适应.这种方法看起来很好
 *  但在现实中,几乎不可能. 由于业务千变万化,要能够提取公共的数据结构只能是很少的一部分.并且
 *  需要花费大量的工作来维护这种公共数据结构
 *    一种方法是通过添加数据转换模块,这种模块内部只有逻辑,它连接在两个模块之间.这种
 * 方法会产生一个后果就是,这种转换模块会多的无法维护
 * 
 *   在此: 针对此问题单独做了抽象,叫XmlData连接(Join)
 *  1,这种连接最终都可以形成一个XmlData内容,被绑定到定制信息中.
 *  2,这种连接可以用图示的方式管理,很容易适应调整的需要
 *  3,为高层的定义应用提供一种依据 
 *   
 *  
 * 通过对各个业务模块输入和产生特定结构的XmlData的抽象可以有以下规律
 * 这些规律是业务模块提供的接口,连接器就是定义不同接口之间的映射关系
 *  1,对数据的操作只有三种类型,in out inout
 *  2,每个业务模块会有一个或多个不同类型的数据操作
 *  3,每种数据操作都会涉及一个数据结构(或结构内的部分内容)
 */
package com.dw.system.xmldata.join;
